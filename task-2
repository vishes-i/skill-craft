<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="css/style.css" />
    <script defer src="js/script.js"></script>
    <title>Stop Watch</title>
  </head>
  <body>


    <BUTTON style="border-radius: 5%; margin-top: 0PX; height: 120PX; "><h1 style="font-weight: bolder; font-family: 'Times New Roman', Times, serif; font-size: xx-large;">STOP-WATCH</h1></BUTTON>
    
    <div class="container" style="margin-top:120PX ; margin-left: 20PX;">
      <div class="timmer">
        <p>00:00:00:</p>
        <span>00</span>
      </div>
      <div class="btns">
        <button class="btn" type="button" id="start">Start</button>
        <button class="btn" type="button" id="stop">Stop</button>
        <button class="btn" type="button" id="reset">Reset</button>
      </div>
    </div>
  </body>
</html>
"use strict";
const btnsEl = document.querySelectorAll(".btn");
const timmerEl = document.querySelector(".timmer");
let hour = 0;
let minute = 0;
let seconds = 0;
let count = 0;
let timmer;
let html;
// btns events
btnsEl.forEach((btns) => {
btns.addEventListener("click", () => {
    if (btns.id === "start") {
      // start btn
    timmer = true;
    stopWatch();
    } else if (btns.id === "stop") {
      // stop btn
    timmer = false;
    stopWatch();
    } else {
      // reset btn
    timmer = false;
    hour = 0;
    minute = 0;
    seconds = 0;
    count = 0;
    html = `  <p>00:00:00:</p>
                <span>00</span>`;
    timmerEl.innerHTML = html;
    stopWatch();
    }
});
});
// stop watch
function stopWatch() {
if (timmer) {
    count++;
    if (count == 100) {
    seconds++;
    count = 0;
    }
    if (seconds == 60) {
    minute++;
    seconds = 0;
    }
    if (minute == 60) {
    hour++;
    minute = 0;
    seconds = 0;
    }
    let hrString = hour;
    let minString = minute;
    let secString = seconds;
    let countString = count;
    if (hour < 10) {
    hrString = "0" + hrString;
    }
    if (minute < 10) {
    minString = "0" + minString;
    }
    if (seconds < 10) {
    secString = "0" + secString;
    }
    if (count < 10) {
    countString = "0" + countString;
    }
    html = ` <p>${hrString}:${minString}:${secString}:</p>
            <span>${countString}</span>`;
    timmerEl.innerHTML = html;
    setTimeout(stopWatch, 10);
}
}
@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&family=Ruda:wght@400;600;700&display=swap");
* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
body {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  font-family: "rudda", sans-serif;
  background-color: #6473ed;
}
.container {
  max-width: 550px;
  width: 100%;
}
.timmer {
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: #fff;
  padding: 1.5rem;
  border-radius: 5px;
  box-sizing: 5px 5px 10px #1c2833;
  font-size: 2rem;
}
.timmer p,
.timmer span {
  font-size: 3.5rem;
  color: #1c2833;
  font-weight: 600;
}
.timmer span {
  color: #6473ed;
  width: 100px;
  margin-left: 0.5rem;
}
.btns {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 2rem;
}
.btn {
  margin: 0 1rem;
  padding: 0.8rem 2.5rem;
  outline: none;
  border: none;
  font-family: "poppins", sans-serif;
  font-size: 1.1rem;
  cursor: pointer;
  background-color: #fff;
  border-radius: 5px;
  color: #1c2833;
  font-weight: 600;
}
.btn:active {
  transform: scale(0.98);
}
